<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2021 THALES GLOBAL SERVICES.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Public License v1.0
  which accompanies this distribution, and is available at
  http://www.eclipse.org/legal/epl-v10.html

  Contributors:
       Thales - initial API and implementation
-->

<project
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
    xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.polarsys</groupId>
    <artifactId>capella-releng-parent</artifactId>
    <version>6.0.0-SNAPSHOT</version>
    <relativePath>capella-releng-parent.xml</relativePath>
  </parent>

  <name>Capella Builder</name>
  <artifactId>capella-builder</artifactId>
  <packaging>pom</packaging>

  <properties>
    <target-definition-groupId>org.polarsys</target-definition-groupId>
    <target-definition-classifier>${target-definition-artifactId}</target-definition-classifier>
    <target-definition-version>6.0.0-SNAPSHOT</target-definition-version>
    <packagedSiteName>${project.artifactId}</packagedSiteName>
  </properties>

  <build>
    <plugins>
      <plugin>
	<groupId>org.eclipse.tycho</groupId>
	<artifactId>target-platform-configuration</artifactId>
	<version>${tycho-version}</version>
	<configuration>
	  <target>
	    <artifact>
	      <groupId>${target-definition-groupId}</groupId>
	      <artifactId>${target-definition-artifactId}</artifactId>
	      <version>${target-definition-version}</version>
	    </artifact>
	  </target>
	  <environments>
	    <environment>
	      <os>win32</os>
	      <ws>win32</ws>
	      <arch>x86_64</arch>
	    </environment>
	    <environment>
	      <os>linux</os>
	      <ws>gtk</ws>
	      <arch>x86_64</arch>
	    </environment>
	    <environment>
	      <os>macosx</os>
	      <ws>cocoa</ws>
	      <arch>x86_64</arch>
	    </environment>
	  </environments>
	</configuration>
      </plugin>


      <!-- enable source plugin/feature generation -->
      <plugin>
	<groupId>org.eclipse.tycho</groupId>
	<artifactId>tycho-source-plugin</artifactId>
	<version>${tycho-version}</version>
	<executions>
	  <execution>
	    <id>plugin-source</id>
	    <goals>
	      <goal>plugin-source</goal>
	    </goals>
	  </execution>
	  <execution>
	    <id>feature-source</id>
	    <goals>
	      <goal>feature-source</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<groupId>org.eclipse.tycho</groupId>
	<artifactId>tycho-p2-plugin</artifactId>
	<version>${tycho-version}</version>
	<executions>
	  <execution>
	    <id>attach-p2-metadata</id>
	    <phase>package</phase>
	    <goals>
	      <goal>p2-metadata</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<groupId>org.eclipse.tycho</groupId>
	<artifactId>tycho-packaging-plugin</artifactId>
	<version>${tycho-version}</version>
	<configuration>
	  <sourceReferences>
	    <generate>true</generate>
	  </sourceReferences>
	</configuration>
	<dependencies>
	  <dependency>
	    <groupId>org.eclipse.tycho.extras</groupId>
	    <artifactId>tycho-sourceref-jgit</artifactId>
	    <version>${tycho-extras-version}</version>
	  </dependency>
	</dependencies>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
	<plugin>
	  <groupId>org.sonarsource.scanner.maven</groupId>
	  <artifactId>sonar-maven-plugin</artifactId>
	  <version>${sonar-version}</version>
	</plugin>	
	<plugin>
	  <groupId>org.jacoco</groupId>
	<artifactId>jacoco-maven-plugin</artifactId>
	<version>${jacoco-version}</version>
	<configuration>
	  <append>true</append>
	  <destFile>${sonar.jacoco.reportPath}</destFile>
	</configuration>
	<executions>
	  <execution>
	    <id>agent-for-ut</id>
	    <goals>
	      <goal>prepare-agent</goal>
	    </goals>
	  </execution>
	  <execution>
	    <id>jacoco-site</id>
	    <phase>verify</phase>
	    <goals>
	      <goal>report</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>macosx-jvm-flags</id>
      <activation>
	<os>
	  <family>mac</family>
	</os>
      </activation>
      <properties>
	<os-jvm-flags>-XstartOnFirstThread</os-jvm-flags>
      </properties>
    </profile>
    
    <profile>
      <id>sign</id>
      <activation>
	<property>
	  <name>BUILD_SIGN</name>
	  <value>true</value>
	</property>
      </activation>
      <build>
	<plugins>
	  <plugin>
	    <groupId>org.eclipse.tycho.extras</groupId>
	    <artifactId>tycho-pack200a-plugin</artifactId>
	    <version>${tycho-extras-version}</version>
	    <executions>
	      <execution>
		<id>pack200-normalize</id>
		<phase>package</phase>
		<goals>
		  <goal>normalize</goal>
		</goals>
	      </execution>
	    </executions>
	  </plugin>
	  <plugin>
	    <groupId>org.eclipse.cbi.maven.plugins</groupId>
	    <artifactId>eclipse-jarsigner-plugin</artifactId>
	    <version>1.1.3</version>
	    <executions>
	      <execution>
		<id>sign</id>
		<phase>package</phase>
		<goals>
		  <goal>sign</goal>
		</goals>
	      </execution>
	    </executions>
	  </plugin>
	  <plugin>
	    <groupId>org.eclipse.tycho.extras</groupId>
	    <artifactId>tycho-pack200b-plugin</artifactId>
	    <version>${tycho-extras-version}</version>
	    <executions>
	      <execution>
		<id>pack200-pack</id>
		<phase>package</phase>
		<goals>
		  <goal>pack</goal>
		</goals>
	      </execution>
	    </executions>
	  </plugin>
	</plugins>
      </build>
      <pluginRepositories>
	<pluginRepository>
	  <id>cbi</id>
	  <url>https://repo.eclipse.org/content/repositories/cbi-releases/</url>
	  <releases>
	    <enabled>true</enabled>
	  </releases>
	  <snapshots>
	    <enabled>false</enabled>
	  </snapshots>
	</pluginRepository>
      </pluginRepositories>
    </profile>

    <!-- this profile auto-activates if this is an eclipse update site artifact -->
    <profile>
      <id>archiveRepository</id>
      <activation>
	<file>
	  <exists>
	    category.xml
	  </exists>
	</file>
      </activation>
      <build>
	
	
	<!--
      Ideally we'd want to be able to run the assemble-repository goal of tycho-p2-repository-plugin first, Groovy next (to add the missing references to content.xml) and the archive-repository goal of tycho-p2-repository-plugin to create a zip archive of the update site. I've tried to achieve this with Maven <executions> but without much success. Therefore, I've turned skipArchive to true and zipped the update site using Groovy.
      -->
	<plugins>
      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-p2-repository-plugin</artifactId>
        <version>${tycho-version}</version>
        <executions>
          <execution>
            <phase>prepare-package</phase>
          </execution>
        </executions>
        <configuration>
          <includeAllDependencies>false</includeAllDependencies>
          <compress>false</compress>
          <xzCompress>false</xzCompress>
          <skipArchive>true</skipArchive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>groovy-maven-plugin</artifactId>
	<version>2.1.1</version>
        <dependencies>
          <dependency>
            <groupId>org.zeroturnaround</groupId>
            <artifactId>zt-zip</artifactId>
            <version>1.13</version>
            <type>jar</type>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <!--  FIXME this assumes the site dir is a sibling of the releng-parent dir -->
              <source>${project.basedir}/../capella-releng-parent/patch-content-xml-and-zip-site.groovy</source>
            </configuration>
          </execution>
        </executions>
       </plugin>
      </plugins>
      </build>
    </profile>

	<!-- Only way I found to conditionally build dropins. To turn on, touch a file createDropins.txt in your
	     site module -->
     <profile>
      <id>createDropins</id>
      <activation>
      	<file>
	   <exists>
	    createDropins.txt
	  </exists>
	  </file>
      </activation>
      <build>
	<plugins>
	  <plugin>
	    <groupId>org.eclipse.tycho.extras</groupId>
	    <artifactId>tycho-eclipserun-plugin</artifactId>
	    <version>${tycho-extras-version}</version>
	    <configuration>
	      <repositories>
		<repository>
		  <id>eclipse-repo</id>
		  <layout>p2</layout>
		  <url>${eclipse-repo.url}</url>
		</repository>
	      </repositories>
	      <dependencies>
		<dependency>
		  <artifactId>org.eclipse.equinox.p2.repository.tools</artifactId>
		  <type>eclipse-plugin</type>
		</dependency>
		<dependency>
		  <artifactId>org.eclipse.equinox.p2.core.feature</artifactId>
		  <type>eclipse-feature</type>
		</dependency>
		<dependency>
		  <artifactId>org.eclipse.equinox.p2.extras.feature</artifactId>
		  <type>eclipse-feature</type>
		</dependency>
		<dependency>
		  <artifactId>org.eclipse.equinox.ds</artifactId>
		  <type>eclipse-plugin</type>
		</dependency>
	      </dependencies>
	      <executionEnvironment>Java-11</executionEnvironment>
	    </configuration>
	    <executions>
	      <execution>
		<id>create-dropins</id>
		<phase>package</phase>
		<goals>
		  <goal>eclipse-run</goal>
		</goals>
		<configuration>
		  <appArgLine>-application org.eclipse.equinox.p2.repository.repo2runnable -source file:"${project.build.directory}/repository" -destination "${project.build.directory}/${packagedSiteName}/eclipse"</appArgLine>
		</configuration>
	      </execution>
	    </executions>
	  </plugin>
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-antrun-plugin</artifactId>
	    <version>${antrun-version}</version>
	    <executions>
	      <execution>
		<id>package-dropins</id>
		<phase>package</phase>
		<goals>
		  <goal>run</goal>
		</goals>
		<configuration>
		  <target>
		    <delete
			file="${project.build.directory}/${packagedSiteName}/eclipse/artifacts.jar" />
		    <delete
			file="${project.build.directory}/${packagedSiteName}/eclipse/content.jar" />
		    <delete includeemptydirs="true">
		      <fileset
			  dir="${project.build.directory}/${packagedSiteName}/eclipse/features"
			  includes="**/META-INF/**" />
		    </delete>
		    <zip
			destfile="${project.build.directory}/${packagedSiteName}-dropins-${unqualifiedVersion}.${buildQualifier}.zip">
		      <fileset dir="${project.build.directory}">
			<include name="${packagedSiteName}/**" />
		      </fileset>
		    </zip>
		  </target>
		</configuration>
	      </execution>
	    </executions>
	  </plugin>
	</plugins>
      </build>
    </profile>

  </profiles>

</project>
